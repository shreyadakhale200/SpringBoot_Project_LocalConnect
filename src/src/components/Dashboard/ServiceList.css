body {
  background: linear-gradient(
    106.37deg,
    #719ae4bb 29.63%,
    #b9d2ffa6 51.55%,
    #bc6ff4b7 90.85%
  );
  min-height: 100vh;
  margin: 0;
  font-family: "Inter", sans-serif;
}

.service-list-container {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 10px 15px; /* 10px vertical, 15px horizontal gap */
  padding-top: 101px;
  padding: 146px;
}

.service-card {
  /* border: 1px solid #05304d; */
  border-radius: 8px;
  overflow: hidden;
  /* box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); */
  transition: transform 0.2s ease-out, box-shadow 0.3s ease;
  margin: 20px 100px; /* Margins around the card */
}


.service-card:hover {
  transform: scale(1.05);
  /* box-shadow: 0 8px rgba(0, 0, 0, 0.2); */
}

.service-card img {
  width: 100%; /* Full width of the card */
  height: 300px; /* Adjust height as needed */
  object-fit: cover; /* Cover the card area while maintaining aspect ratio */
}

input[type="date"] {
  cursor: pointer;
}


.service-card-text {
  padding: 10px;
  text-align: center;
  font-size: 20px;
  font-weight: bold;
  background-color: #ffffff;
  box-shadow: inset 0 -4px 8px rgba(0, 0, 0, 0.1);
  font-family: inherit;
}

@keyframes zoomIn {
  from {
    opacity: 0;
    transform: translate(-50%, -50%) scale(0.8);
  }
  to {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
}

.form-container {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background-color: rgb(243, 240, 240);
  padding: 20px;
  border-radius: 8px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  width: 90%;
  max-width: 600px;
  box-sizing: border-box;
  z-index: 1000;
  opacity: 0; /* Initially hidden */
  animation: zoomIn 0.5s ease forwards; /* Apply the animation */
}


/* Form Styles */
.form-container form {
  display: flex;
  flex-direction: column;
  gap: 15px;
}

.form-container h3 {
  margin-bottom: 10px;
  font-size: 21px;
  text-align: center;
  color: #333;
  font-family: initial;
}

.form-container label {
  font-weight: bold;
  color: #555;
  margin-bottom: 5px;
}

/* Apply styles to date and duration inputs */
.form-container input[type="date"],
.form-container input[name="duration"] {
  padding: 10px;
  border-radius: 4px;
  border: 1px solid #ddd;
  font-size: 16px;
  width: 100%;
  box-sizing: border-box;
}

.form-container button {
  padding: 12px;
  border: none;
  background-color: #5082e0b2;
  color: #191616;
  border-radius: 4px;
  cursor: pointer;
  font-size: 18px;
  margin-top: 6px;
  font-weight: bold;
  font-family:Arial, Helvetica, sans-serif;
  transition: background-color 0.3s ease;
}

.form-container button:hover {
  background-color: #57a2f2;
  color: white;
}

/* Cancel Button Style */
.form-container .cancel-button {
  background-color: #f44336;
}

.form-container .cancel-button:hover {
  background-color: #d32f2f;
}
/* Time Picker Container */
.react-time-picker__wrapper {
  display: flex; /* Flexbox to manage layout */
  justify-content: center; /* Center content horizontally */
  align-items: center; /* Center content vertically */
  width: 100%; /* Full width */
  border: 1px solid #ddd; /* Border around the picker */
  border-radius: 4px; /* Rounded corners */
  box-sizing: border-box; /* Ensure padding is included in width */
}

/* Time Picker Input */
.react-time-picker {
  width: 100%; /* Full width of container */
  border: none; /* Remove default border */
  border-radius: 4px; /* Rounded corners */
  padding: 10px; /* Padding inside input */
  font-size: 16px; /* Font size */
  box-sizing: border-box; /* Ensure padding is included in width */
}

/* Input Group (if applicable) */
.react-time-picker__inputGroup {
  display: flex; /* Flexbox layout */
  justify-content: space-between; /* Space between inputs */
  width: 100%; /* Full width */
}

.react-time-picker__inputGroup input {
  flex: 1; /* Flex-grow to take available space */
  border: none; /* Remove default border */
  padding: 10px; /* Padding inside input */
  font-size: 16px; /* Font size */
  box-sizing: border-box; /* Ensure padding is included in width */
}

.react-time-picker__inputGroup input:focus {
  outline: none; /* Remove default outline */
  border: 1px solid #007bff; /* Border color on focus */
}
